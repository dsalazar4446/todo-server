name: Deploy Firebase Functions

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      # üåê Variables globales accesibles por todos los steps
      FIREBASE_PROJECT_ID: ${{ vars.FIREBASE_PROJECT_ID }}
      FIREBASE_STORAGE_BUCKET: ${{ vars.FIREBASE_STORAGE_BUCKET }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      JWT_EXPIRES_IN: ${{ vars.JWT_EXPIRES_IN }}
      NODE_ENV: production
      PORT: 3000
      PREFIX: /api

    steps:
      # üß© 1Ô∏è‚É£ Checkout
      - name: Checkout repository
        uses: actions/checkout@v4

      # üß© 2Ô∏è‚É£ Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # üß© 3Ô∏è‚É£ Install dependencies
      - name: Install dependencies
        working-directory: todo-server
        run: npm ci

      # üß© 4Ô∏è‚É£ Build project (las vars ya est√°n en process.env)
      - name: Build
        working-directory: todo-server
        run: npm run build

      # üß© 5Ô∏è‚É£ Install Firebase CLI
      - name: Install Firebase CLI
        run: npm install -g firebase-tools@latest

      # üß© 6Ô∏è‚É£ Configure Google credentials (service account JSON)
      - name: Configure Google credentials
        run: |
          echo '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}' > $HOME/service-account.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=$HOME/service-account.json" >> $GITHUB_ENV

      # üß© 7Ô∏è‚É£ Deploy to Firebase (las vars estar√°n en el entorno)
      - name: Deploy Functions
        working-directory: todo-server
        run: |
          echo "‚úÖ Environment variables loaded:"
          echo "Project: $FIREBASE_PROJECT_ID"
          echo "Bucket: $FIREBASE_STORAGE_BUCKET"
          echo "Prefix: $PREFIX"
          firebase deploy --only functions --project $FIREBASE_PROJECT_ID --non-interactive --force
